{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Vardan Work Folder\\\\Uber-clone-in-React-Native\\\\src\\\\screens\\\\DestinationSearch\\\\index.jsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"./styles\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\n\nvar DestinationSearch = function DestinationSearch(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      fromText = _useState2[0],\n      setFromText = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destinationText = _useState4[0],\n      setDestinationText = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      originPlace = _useState6[0],\n      setOriginPlace = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      destinationPlace = _useState8[0],\n      setDestinationPlace = _useState8[1];\n\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    value: fromText,\n    onChangeText: setFromText,\n    style: styles.textInput,\n    placeholder: \"From\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    value: destinationText,\n    onChangeText: setDestinationText,\n    style: styles.textInput,\n    placeholder: \"Where to\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), React.createElement(GooglePlacesAutocomplete, {\n    placeholder: \"Where to?\",\n    onPress: function onPress(data) {\n      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      setDestinationPlace({\n        data: data,\n        details: details\n      });\n      console.log(data, details);\n    },\n    fetchDetails: true,\n    query: {\n      key: 'AIzaSyDzE0DQ5s7BbITuzwyPh-QheFjPRtvn69U',\n      language: 'en'\n    },\n    requestUrl: {\n      useOnPlatform: 'web',\n      url: 'https://maps.googleapis.com/maps/api'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default DestinationSearch;","map":{"version":3,"sources":["D:/Vardan Work Folder/Uber-clone-in-React-Native/src/screens/DestinationSearch/index.jsx"],"names":["React","useState","styles","GooglePlacesAutocomplete","DestinationSearch","props","fromText","setFromText","destinationText","setDestinationText","originPlace","setOriginPlace","destinationPlace","setDestinationPlace","container","textInput","data","details","console","log","key","language","useOnPlatform","url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,MAAP;AACA,SAASC,wBAAT,QAAyC,yCAAzC;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA,kBAEDJ,QAAQ,EAFP;AAAA;AAAA,MAE1BK,QAF0B;AAAA,MAEhBC,WAFgB;;AAAA,mBAGaN,QAAQ,EAHrB;AAAA;AAAA,MAG1BO,eAH0B;AAAA,MAGTC,kBAHS;;AAAA,mBAKKR,QAAQ,CAAC,IAAD,CALb;AAAA;AAAA,MAK1BS,WAL0B;AAAA,MAKbC,cALa;;AAAA,mBAMeV,QAAQ,CAAC,IAAD,CANvB;AAAA;AAAA,MAM1BW,gBAN0B;AAAA,MAMRC,mBANQ;;AAQjC,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAER,QADX;AAEI,IAAA,YAAY,EAAEC,WAFlB;AAGI,IAAA,KAAK,EAAEL,MAAM,CAACa,SAHlB;AAII,IAAA,WAAW,EAAC,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEP,eADX;AAEI,IAAA,YAAY,EAAEC,kBAFlB;AAGI,IAAA,KAAK,EAAEP,MAAM,CAACa,SAHlB;AAII,IAAA,WAAW,EAAC,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAaI,oBAAC,wBAAD;AACI,IAAA,WAAW,EAAC,WADhB;AAEI,IAAA,OAAO,EAAE,iBAACC,IAAD,EAA0B;AAAA,UAAnBC,OAAmB,uEAAT,IAAS;AAE/BJ,MAAAA,mBAAmB,CAAC;AAACG,QAAAA,IAAI,EAAJA,IAAD;AAAOC,QAAAA,OAAO,EAAPA;AAAP,OAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAlB;AACH,KANL;AAOI,IAAA,YAAY,MAPhB;AAQI,IAAA,KAAK,EAAE;AACHG,MAAAA,GAAG,EAAE,yCADF;AAEHC,MAAAA,QAAQ,EAAE;AAFP,KARX;AAYI,IAAA,UAAU,EAAE;AACRC,MAAAA,aAAa,EAAE,KADP;AAERC,MAAAA,GAAG,EACC;AAHI,KAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ,CADJ;AAsCH,CA9CD;;AAgDA,eAAenB,iBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, SafeAreaView } from 'react-native';\r\nimport styles from './styles';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\n\r\nconst DestinationSearch = (props) => {\r\n\r\n    const [fromText, setFromText] = useState();\r\n    const [destinationText, setDestinationText] = useState();\r\n\r\n    const [originPlace, setOriginPlace] = useState(null);\r\n    const [destinationPlace, setDestinationPlace] = useState(null);\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <View style={styles.container}>\r\n                <TextInput \r\n                    value={fromText}\r\n                    onChangeText={setFromText}\r\n                    style={styles.textInput}\r\n                    placeholder=\"From\" />\r\n\r\n                <TextInput\r\n                    value={destinationText}\r\n                    onChangeText={setDestinationText}\r\n                    style={styles.textInput} \r\n                    placeholder=\"Where to\" />\r\n\r\n                <GooglePlacesAutocomplete\r\n                    placeholder='Where to?'\r\n                    onPress={(data, details = null) => {\r\n                        // 'details' is provided when fetchDetails = true\r\n                        setDestinationPlace({data, details});\r\n                        console.log(data, details);\r\n                    }}\r\n                    fetchDetails\r\n                    query={{\r\n                        key: 'AIzaSyDzE0DQ5s7BbITuzwyPh-QheFjPRtvn69U',\r\n                        language: 'en',\r\n                    }}\r\n                    requestUrl={{\r\n                        useOnPlatform: 'web', // or \"all\"\r\n                        url:\r\n                            'https://maps.googleapis.com/maps/api'\r\n                        //'https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api', \r\n                        //or any proxy server that hits https://maps.googleapis.com/maps/api\r\n                    }}\r\n                />\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default DestinationSearch;"]},"metadata":{},"sourceType":"module"}